Here's a simple Flask application structure for storing employee information. The application will have a main file named `main.py`, a template for input form, and a way to store employee information.

### File Structure
```
employee_app/
│
├── main.py
├── templates/
│   ├── index.html
│   └── employee_list.html
└── README.md
```

### File Codes

#### `main.py`
```python
from flask import Flask, render_template, request, redirect, url_for

app = Flask(__name__)

# Temporary in-memory storage for employee info
employees = []

@app.route('/')
def index():
    return render_template('index.html', employees=employees)

@app.route('/add', methods=['POST'])
def add_employee():
    name = request.form['name']
    position = request.form['position']
    salary = request.form['salary']
    
    if name and position and salary:
        employee = {'name': name, 'position': position, 'salary': salary}
        employees.append(employee)
    
    return redirect(url_for('index'))

if __name__ == '__main__':
    app.run(debug=True)
```

#### `templates/index.html`
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Info</title>
</head>
<body>
    <h1>Employee Information</h1>
    
    <form action="/add" method="POST">
        <input type="text" name="name" placeholder="Name" required>
        <input type="text" name="position" placeholder="Position" required>
        <input type="text" name="salary" placeholder="Salary" required>
        <button type="submit">Add Employee</button>
    </form>

    <h2>Employee List</h2>
    <ul>
        {% for employee in employees %}
            <li>{{ employee.name }} - {{ employee.position }} - ${{ employee.salary }}</li>
        {% endfor %}
    </ul>
</body>
</html>
```

#### `templates/employee_list.html`
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee List</title>
</head>
<body>
    <h1>Employee List</h1>
    <ul>
        {% for employee in employees %}
            <li>{{ employee.name }} - {{ employee.position }} - ${{ employee.salary }}</li>
        {% endfor %}
    </ul>
    <a href="/">Back</a>
</body>
</html>
```

#### `README.md`
```markdown
# Employee Info Application

This is a simple Flask application for storing and displaying employee information.

## File Structure
```
employee_app/
│
├── main.py               # Main application file
├── templates/            # Contains HTML templates
│   ├── index.html        # Form to add an employee
│   └── employee_list.html # Display list of employees
└── README.md             # This documentation file
```

## Requirements
- Python 3.x
- Flask

## Installation
1. Clone the repository or download the files.
2. Install Flask if you haven't already:
   ```bash
   pip install flask
   ```

## Running the Application
To start the Flask application, run:
```bash
python main.py
```

Open your web browser and go to `http://127.0.0.1:5000/` to access the application.

## Usage
- Fill in the employee's name, position, and salary in the form and click "Add Employee".
- The employee will be listed below the form.
```

This structure creates a basic application where users can submit employee data, and it will display that data on the homepage.